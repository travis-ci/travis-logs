#!/usr/bin/env bash
set -o errexit

main() {
  if [[ "${DEBUG}" ]]; then
    set -o xtrace
  fi

  PATH="${HOME}/bin:${PATH}"
  eval "$(perl -I ~/perl5/lib/perl5/ '-Mlocal::lib')"

  [[ "${PGHOST}" ]] || {
    echo "Missing \$PGHOST 🐘👻"
    exit 1
  }

  [[ "${PGDATABASE}" ]] || {
    echo "Missing \$PGDATABASE"
    exit 1
  }

  [[ "${DATABASE_URL}" ]] || {
    echo "Missing \$DATABASE_URL"
    exit 1
  }

  : "${ENTERPRISE_MIGRATE_TO:=log_parts_created_at_not_null}"

  if ! __pgdb_exists; then
    createdb
  fi

  if __logs_tables_exist; then
    sqitch deploy \
      --to-change structure \
      --log-only \
      "db:${DATABASE_URL}"
  fi
  __migrate
}

__pgdb_exists() {
  psql -ltA | if grep -qE "^${PGDATABASE}\|"; then
    return 0
  else
    return 1
  fi
}

__logs_tables_exist() {
  if ! psql -c "$(__table_exists_sql 'logs')" &>/dev/null; then
    return 1
  fi

  if ! psql -c "$(__table_exists_sql 'log_parts')" &>/dev/null; then
    return 1
  fi

  return 0
}

__table_exists_sql() {
  echo "SELECT 1/count(*) FROM pg_catalog.pg_tables " \
    "WHERE schemaname = 'public' AND tablename = '${1}'"
}

__migrate() {
  # Use the DATABASE_URL we use elsewhere but make it fit the DATABASE_URI format
  # sqitch expects
  sqitch deploy \
    --to-change "${ENTERPRISE_MIGRATE_TO}" \
    "db:${DATABASE_URL}"
  sqitch deploy \
    --log-only --no-verify \
    "db:${DATABASE_URL}"
  sqitch verify \
    --to-change "${ENTERPRISE_MIGRATE_TO}" \
    "db:${DATABASE_URL}"
}

main "$@"
